<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Superstroller.github.io</id>
    <title>Gridea</title>
    <updated>2019-12-16T12:37:07.803Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Superstroller.github.io"/>
    <link rel="self" href="https://Superstroller.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://Superstroller.github.io/images/avatar.png</logo>
    <icon>https://Superstroller.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Volatile]]></title>
        <id>https://Superstroller.github.io/post/volatile-huan-cun-yi-zhi-xing</id>
        <link href="https://Superstroller.github.io/post/volatile-huan-cun-yi-zhi-xing">
        </link>
        <updated>2019-12-16T02:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="两个特点">两个特点</h3>
<p>（1）保证了不同线程对该变量操作的内存可见性<br>
（2）禁止指令重排序</p>
<h3 id="内存可见性">内存可见性</h3>
<p>声明了volatile的变量进行写操作，JVM就会向处理器发送一条Lock前缀的指令<br>
（1）Lock前缀的指令会引起处理器缓存写回内存<br>
（2）一个处理器的缓存回写到内存会导致其他处理器的缓存失效<br>
（3）当处理器发现本地缓存失效后，就会从内存中重读该变量数据，即可以获取当前最新值</p>
<h3 id="禁止指令重排序">禁止指令重排序</h3>
<p>lock前缀指令相当于一个内存屏障，其功能：<br>
（1）重排序时不能把后面的指令重排序到内存屏障之前的位置<br>
（2）使得本CPU的Cache写入主内存<br>
（3）写入动作也会引起别的CPU或者别的内核无效化其Cache，相当于让新写入的值对别的线程可见</p>
]]></content>
    </entry>
</feed>